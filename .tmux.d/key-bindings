# switch prefix key to C-\
unbind   C-b
set -g prefix  C-\\ # hack to prevent backslash being parsed as continuation
set -g prefix2 F9
bind     \   send-prefix
bind     C-\\ last-window

# handy bindings
bind   -n  PPage       copy-mode -u
bind   -n  NPage       copy-mode
bind -Tcopy-mode-vi IC send -X copy-selection-and-cancel\; paste-buffer

bind   -n  C-M-r      command-prompt -i -p "isearch up:" "send-keys -X search-backward-incremental '%%'"

# Switch to last session
bind       /          switch-client -l

bind       %          split-window
bind       '"'        split-window -h
# " <- unconfuse emacs

bind       s          choose-session
bind       C-s        command-prompt 'attach-session -t "%%"'
bind       t          choose-tree
bind       A          command-prompt -I '#W' 'rename-window "%%"'
bind       C          command-prompt 'new-session -s "%%"'

# http://unix.stackexchange.com/questions/5832/is-there-an-equivalent-of-gnu-screens-log-command-in-tmux
bind       h          pipe-pane -o "exec cat >>$HOME/'#W-tmux.log'" \; display-message 'Enabled logging to ~/#W-tmux.log'
bind       H          pipe-pane \; display-message 'Disabled logging to ~/#W-tmux.log'

bind       m          set-window-option monitor-activity
bind       M          command-prompt -p "Monitor for silent interval (secs):" 'set-window-option monitor-silence %%'
bind       C-g        set visual-bell
# bind       TAB        select-pane -t :.+
bind       j          command-prompt -p "Join to window:" 'join-pane -t %%'
bind       J          join-pane -t :-
bind       C-k        confirm-before kill-window
bind       C-r        respawn-pane
bind       Q          confirm-before kill-session
unbind     C-l
bind       C-l        refresh-client
bind       S          command-prompt -I '#S' 'rename-session "%%"'
bind   -n  F10        command-prompt
#bind   -n  M-:        command-prompt

# This strange combination is what I'm used to from GNU screen
set -g mode-keys vi
set -g status-keys emacs

bind                *    set synchronize-panes
